@using MediatR
@using MediatRPortal.Client.Features.Quotes.Pages.Designer.CQRS.Notifications
@using MediatRPortal.Client.Features.Quotes.Pages.Designer.Components.Routes.CQRS.Commands
@using MediatRPortal.Client.Features.Quotes.Pages.Designer.Components.Routes.Components

@inherits DesignerComponentBase

<MudText Typo="Typo.h4" GutterBottom="true">Routes <MudText Typo="Typo.caption">(id: @ComponentId)</MudText></MudText>

<MudGrid>

    <MudItem xs="12" Class="d-flex justify-space-around align-center">
        <MudIcon Icon="@(Designer.HasCargoDetails ? Icons.Material.Filled.Visibility : Icons.Material.Filled.VisibilityOff)" /> Has details

        <MudSpacer />

        <MudTextField Margin="Margin.Dense" Variant="Variant.Outlined" @bind-Value="_routesCount" Label="Generate routes" />
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="GenerateRoutes">Generate</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="ClearRoutes">Clear</MudButton>
    </MudItem>

    <MudItem xs="12">
        <MudExpansionPanels MultiExpansion Elevation="0" Outlined Square>
            @foreach (var route in _routes)
            {
                <RouteRow Route="route" />
            }
        </MudExpansionPanels>
    </MudItem>

    <MudItem xs="12">
        <MudButton FullWidth Variant="Variant.Filled" Color="Color.Primary" OnClick="@AddRoute">
            <MudIcon Icon="@Icons.Material.Filled.Add" /> Add
        </MudButton>
    </MudItem>

</MudGrid>
